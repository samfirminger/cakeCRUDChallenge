[{"/Users/sfirminger/dev/mydev/cakeCRUDChallenge/client/src/index.js":"1","/Users/sfirminger/dev/mydev/cakeCRUDChallenge/client/src/App.js":"2","/Users/sfirminger/dev/mydev/cakeCRUDChallenge/client/src/components/Home.js":"3","/Users/sfirminger/dev/mydev/cakeCRUDChallenge/client/src/components/Cake.js":"4","/Users/sfirminger/dev/mydev/cakeCRUDChallenge/client/src/components/GlobalStyle.js":"5","/Users/sfirminger/dev/mydev/cakeCRUDChallenge/client/src/components/CakeList.js":"6","/Users/sfirminger/dev/mydev/cakeCRUDChallenge/client/src/components/device.js":"7","/Users/sfirminger/dev/mydev/cakeCRUDChallenge/client/src/components/NewCake.js":"8"},{"size":267,"mtime":1607424447822,"results":"9","hashOfConfig":"10"},{"size":672,"mtime":1607425233282,"results":"11","hashOfConfig":"10"},{"size":1430,"mtime":1607433847153,"results":"12","hashOfConfig":"10"},{"size":2254,"mtime":1607438700137,"results":"13","hashOfConfig":"10"},{"size":834,"mtime":1607431961510,"results":"14","hashOfConfig":"10"},{"size":1210,"mtime":1607438418221,"results":"15","hashOfConfig":"10"},{"size":555,"mtime":1607431068284,"results":"16","hashOfConfig":"10"},{"size":3993,"mtime":1607438645113,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"172oawj",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"/Users/sfirminger/dev/mydev/cakeCRUDChallenge/client/src/index.js",[],"/Users/sfirminger/dev/mydev/cakeCRUDChallenge/client/src/App.js",[],"/Users/sfirminger/dev/mydev/cakeCRUDChallenge/client/src/components/Home.js",[],"/Users/sfirminger/dev/mydev/cakeCRUDChallenge/client/src/components/Cake.js",["36"],"/Users/sfirminger/dev/mydev/cakeCRUDChallenge/client/src/components/GlobalStyle.js",[],"/Users/sfirminger/dev/mydev/cakeCRUDChallenge/client/src/components/CakeList.js",[],"/Users/sfirminger/dev/mydev/cakeCRUDChallenge/client/src/components/device.js",[],"/Users/sfirminger/dev/mydev/cakeCRUDChallenge/client/src/components/NewCake.js",["37"],"import React, {useState} from 'react';\nimport styled from \"styled-components\";\nimport {useHistory} from \"react-router\";\n\nconst NewCakeFormWrapper = styled.div`\n\n`;\n\nconst NewCakeForm = styled.form`\n    margin-top: 50px;\n    font-size: 20px;\n`;\n\nconst FormInput = styled.input`\n    margin-bottom: 2vh;\n    border-right: none;\n    border-top: none;\n    border-left: none;\n    background-color:transparent;\n    outline: none;\n    color: white;\n    caret-color: white;\n    width: 200px;\n    height: 40px;\n    font-size: 20px;\n    \n    ::placeholder {\n        color: white;\n        font-size: 20px;\n    }\n`;\n\nconst DropDown = styled.select`\n    margin-bottom: 2vh;\n    border-width: 2px;\n    border-right: none;\n    border-top: none;\n    border-left: none;\n    background-color:transparent;\n    outline: none;\n    color: white;\n    caret-color: white;\n    width: 200px;\n    height: 40px;\n    font-size: 20px;\n\n\n    ::placeholder {\n        color: white;\n    }\n`;\n\nconst SelectLabel = styled.span`\n\n`;\n\nconst SubmitButton = styled.button`\n    background: rgba(255,255,255,.2);\n    padding: 2vh;\n    border: none;\n    cursor: pointer;\n    border-radius: 4px 4px;\n    width: 200px;\n    font-size: 20px;\n`;\n\nconst NewCake = () => {\n\n    const [name, setName] = useState('');\n    const [comment, setComment] = useState('');\n    const [imageUrl, setImageUrl] = useState('');\n    const [yumFactor, setYumFactor] = useState('');\n    const history = useHistory();\n\n    function handleSubmit(event) {\n        event.preventDefault();\n\n        const cake = {\n            name,\n            comment,\n            imageUrl,\n            yumFactor\n        };\n\n        console.log(cake);\n\n        fetch(`/api/cake`, {\n            method: 'POST',\n            headers: new Headers({'content-type': 'application/json'}),\n            body: JSON.stringify(cake)\n        }).then(response => response.json());\n\n        setName('');\n        setComment('');\n        setImageUrl('');\n        setYumFactor('');\n        history.push(\"/\");\n    }\n\n    return <NewCakeFormWrapper>\n        <NewCakeForm onSubmit={handleSubmit}>\n            <div  className=\"form-group\">\n                <FormInput\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"name\"\n                    placeholder=\"Cake Name\"\n                    autoComplete={\"off\"}\n                    maxLength={30}\n                    onChange={e => setName(e.target.value)}\n                />\n            </div>\n\n            <div className=\"form-group\">\n                <FormInput\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"comment\"\n                    placeholder=\"Comment\"\n                    autoComplete={\"off\"}\n                    maxLength={200}\n                    onChange={e => setComment(e.target.value)}\n                />\n            </div>\n\n            <div  className=\"form-group\">\n                <FormInput\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"imageUrl\"\n                    placeholder=\"Image Url\"\n                    autoComplete={\"off\"}\n                    onChange={e => setImageUrl(e.target.value)}\n                />\n            </div>\n\n\n            <div  className=\"form-group\">\n                <DropDown name=\"yumFactor\" value={yumFactor} onChange={e => setYumFactor(e.target.value)}>\n                    <option value=\"\" disabled selected>Yum Factor</option>\n                    <option value={1}>1</option>\n                    <option value={1}>2</option>\n                    <option value={1}>3</option>\n                    <option value={1}>4</option>\n                    <option value={1}>5</option>\n                </DropDown>\n            </div>\n\n            <div >\n                <SubmitButton type=\"submit\">\n                    Create\n                </SubmitButton>\n            </div>\n        </NewCakeForm>\n    </NewCakeFormWrapper>;\n\n};\n\nexport default NewCake;",["38","39"],{"ruleId":"40","severity":1,"message":"41","line":5,"column":9,"nodeType":"42","messageId":"43","endLine":5,"endColumn":19},{"ruleId":"40","severity":1,"message":"44","line":53,"column":7,"nodeType":"42","messageId":"43","endLine":53,"endColumn":18},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},"no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'SelectLabel' is assigned a value but never used.","no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-global-assign","no-unsafe-negation"]